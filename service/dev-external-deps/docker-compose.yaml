version: "3.8"
services:
  # Local DB used for development and testing
  db:
    image: postgres:16.1
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: Safe1!
      POSTGRES_DB: terraapprove
    ports:
      - 5432:5432

  integration-test-db:
    image: postgres:16.1
    # These tweaks are not safe to use in production, but they can speed up local development
    # Apply some performance improvements to pg as these guarantees are not needed while running locally
    command: "postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off' -c 'max_connections=100' -c 'client_min_messages=warning'"
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: Safe1!
      POSTGRES_DB: terraapprove
    ports:
      - 5433:5432

  message-broker:
    container_name: message-broker
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9997:9997"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://message-broker:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@message-broker:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=message-broker -Dcom.sun.management.jmxremote.rmi.port=9997
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

  message-broker-ui:
    container_name: message-broker-ui
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dev
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: message-broker:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
